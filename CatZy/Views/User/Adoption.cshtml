@model IEnumerable<Catzy.Models.CatPost>
@{
    ViewData["Title"] = "Adopt a Cat";
}
<nav class="navbar">
    <div class="logo">Catzy</div>
    <ul class="nav-links">
        <li><a href="@Url.Action("Index","User")">Home</a></li>
        <li><a href="@Url.Action("Adoption","User")" class="active">Adoption</a></li>
        <li><a href="@Url.Action("PetDiary","User")">Pet Diary</a></li>
        <li><a href="/Account/Logout">Logout</a></li>
    </ul>
</nav>

<div class="adoption-container">
    <div class="community-wrap">
        <div class="header-section">
            <h2 class="section-title">Community Posted Cats</h2>
            <a class="post-btn" href="@Url.Action("PostCat","User")">+ Post your cat</a>
        </div>

        @* Notifications Section *@
        @if (ViewBag.Notifications != null && ((IEnumerable<dynamic>)ViewBag.Notifications).Any())
        {
            <div class="notice-wrap">
                @foreach (var n in (IEnumerable<dynamic>)ViewBag.Notifications)
                {
                    <div class="notice">
                        <div class="notice-title">@n.Title</div>
                        <div class="notice-msg">@n.Message</div>
                        <div class="notice-time">@n.CreatedAt.ToLocalTime().ToString("dd MMM yyyy, HH:mm")</div>
                        @using (Html.BeginForm("DismissNotification", "User", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@n.Id" />
                            <button type="submit" class="notice-btn">Dismiss</button>
                        }
                    </div>
                }
            </div>
        }

        @using (Html.BeginForm("Adoption", "User", FormMethod.Get, new { @class = "filters-form" }))
        {
            <div class="filters-container">
                <div class="filter-group">
                    <div class="filter-item">
                        <label for="age">Age</label>
                        <select id="age" name="age" class="filter-select">
                            @foreach (var a in new[] { "All", "6 months", "1 year", "2 years", "3 years" })
                            {
                                <option value="@a" @(ViewBag.SelectedAge == a ? "selected" : null)>@a</option>
                            }
                        </select>
                    </div>
                    <div class="filter-item">
                        <label for="gender">Gender</label>
                        <select id="gender" name="gender" class="filter-select">
                            @foreach (var g in new[] { "All", "Male", "Female" })
                            {
                                <option value="@g" @(ViewBag.SelectedGender == g ? "selected" : null)>@g</option>
                            }
                        </select>
                    </div>
                    <div class="filter-item">
                        <label for="color">Color</label>
                        <select id="color" name="color" class="filter-select">
                            @foreach (var c in new[] { "All", "Black", "Brown", "White", "Gray", "Orange" })
                            {
                                <option value="@c" @(ViewBag.SelectedColor == c ? "selected" : null)>@c</option>
                            }
                        </select>
                    </div>
                    <div class="filter-item">
                        <label for="breed">Breed</label>
                        <select id="breed" name="breed" class="filter-select">
                            @foreach (var b in new[] { "All", "Persian", "Siamese", "British Shorthair", "Mixed" })
                            {
                                <option value="@b" @(ViewBag.SelectedBreed == b ? "selected" : null)>@b</option>
                            }
                        </select>
                    </div>
                </div>
                <button type="submit" class="filter-btn">Apply Filters</button>
            </div>
        }

        <div class="cat-grid">
            @foreach (var c in Model)
            {
                <div class="cat-card">
                    <div class="card-image">
                        <img src="@Url.Content(c.ImageUrl)" alt="@c.Name" />
                    </div>
                    <div class="card-content">
                        <h4 class="cat-name">@c.Name</h4>
                        <p class="cat-details">@c.Breed • @c.Age • @c.Gender • @c.Color</p>
                        <div class="card-actions">
                            <a href="@Url.Action("PostCatDetails","User", new { id = c.Id })" class="details-btn">View Details</a>
                            <a href="@Url.Action("AdoptPostCat","User", new { id = c.Id })" class="adopt-btn">Adopt Me</a>
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    /* Theme tokens */
    :root {
        --bg: #f8f2e8;
        --panel: #ffffff;
        --ink: #2c2117;
        --brand: #8b5a3c;
        --muted: #6b4226;
        --card: #fefdfb;
        --border: #e8ddd0;
        --btn: #d4935a;
        --btnH: #b8743a;
        --ok: #52a855;
        --okH: #3d8740;
        --shadow: rgba(139, 90, 60, 0.1);
        --shadow-hover: rgba(139, 90, 60, 0.15);
    }

    /* Page base */
    body {
        margin: 0;
        background: var(--bg);
        color: var(--ink);
        font-family: 'Comic Sans MS', cursive, sans-serif;
        background-color: #fde2b5;
        line-height: 1.6;
    }

    /* Navbar */
    .navbar {
        background-color: #644426;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 14px 40px;
        width: 100%;
        position: fixed;
        top: 0;
        left: 0;
        z-index: 1000;
    }
        .navbar .logo {
            font-size: 28px;
            color: white;
            font-weight: bold;
        }

    .nav-links {
        list-style: none;
        display: flex;
        gap: 25px;
        margin: 0;
        padding: 0;
    }
        .nav-links a {
            color: white;
            text-decoration: none;
            font-weight: bold;
            transition: color 0.2s ease;
        }
            .nav-links a:hover, .nav-links a.active {
                color: #f9d097;
            }

    /* Container */
    .adoption-container {
        margin-top: 80px;
        padding: 40px 24px;
        background: var(--panel);
        min-height: calc(100vh - 80px);
    }

    .community-wrap {
        max-width: 1200px;
        margin: 0 auto;
    }

    /* Header section */
    .header-section {
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 32px;
        padding-bottom: 16px;
        border-bottom: 2px solid var(--border);
    }

    .section-title {
        margin: 0;
        font-size: 32px;
        color: var(--ink);
        font-weight: 600;
        letter-spacing: -0.5px;
    }

    .post-btn {
        background: var(--btn);
        color: #fff;
        border: none;
        padding: 12px 24px;
        border-radius: 25px;
        font-weight: 600;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px var(--shadow);
        font-size: 16px;
    }
        .post-btn:hover {
            background: var(--btnH);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px var(--shadow-hover);
        }

    /* Notifications */
    .notice-wrap {
        display: flex;
        flex-direction: column;
        gap: 12px;
        margin: 16px 0 24px;
        max-width: 800px;
    }

    .notice {
        background: #fff7e6;
        border: 1px solid #f0d7aa;
        border-radius: 12px;
        padding: 14px 16px;
        box-shadow: 0 2px 8px var(--shadow);
        border-left: 4px solid var(--btn);
    }

    .notice-title {
        font-weight: 800;
        color: #6b4b2e;
        margin-bottom: 6px;
        font-size: 16px;
    }

    .notice-msg {
        color: #5b4636;
        margin-bottom: 8px;
        line-height: 1.4;
    }

    .notice-time {
        color: #8a5e3c;
        font-size: 12px;
        margin-bottom: 8px;
    }

    .notice-btn {
        background: var(--btn);
        color: #fff;
        border: none;
        border-radius: 14px;
        padding: 6px 14px;
        cursor: pointer;
        font-weight: 700;
        font-size: 13px;
        transition: background .2s;
    }
        .notice-btn:hover {
            background: var(--btnH);
        }

    /* Filters */
    .filters-form {
        margin-bottom: 40px;
    }

    .filters-container {
        display: flex;
        align-items: flex-end;
        justify-content: space-between;
        gap: 20px;
        padding: 24px;
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 16px;
        box-shadow: 0 2px 8px var(--shadow);
    }

    .filter-group {
        display: flex;
        gap: 24px;
        flex-wrap: wrap;
    }

    .filter-item {
        display: flex;
        flex-direction: column;
        min-width: 120px;
    }
        .filter-item label {
            font-size: 13px;
            color: var(--muted);
            font-weight: 600;
            margin-bottom: 6px;
            user-select: none;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

    .filter-select {
        padding: 10px 16px;
        border-radius: 10px;
        border: 2px solid var(--border);
        background: #fff;
        font-size: 15px;
        color: var(--ink);
        cursor: pointer;
        transition: all 0.2s ease;
    }
        .filter-select:focus {
            outline: none;
            border-color: var(--btn);
            box-shadow: 0 0 0 3px rgba(212, 147, 90, 0.1);
        }

    .filter-btn {
        background: var(--btn);
        color: #fff;
        border: none;
        padding: 12px 20px;
        border-radius: 10px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 15px;
        white-space: nowrap;
        height: fit-content;
    }
        .filter-btn:hover {
            background: var(--btnH);
        }

    /* Cards grid */
    .cat-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 24px;
        align-items: stretch;
    }

    /* Card */
    .cat-card {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 16px;
        overflow: hidden;
        display: flex;
        flex-direction: column;
        box-shadow: 0 4px 12px var(--shadow);
        transition: all 0.3s ease;
    }
        .cat-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 24px var(--shadow-hover);
        }

    .card-image {
        position: relative;
        overflow: hidden;
    }

    .cat-card img {
        width: 100%;
        height: 200px;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .cat-card:hover img {
        transform: scale(1.05);
    }

    .card-content {
        padding: 20px;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .cat-name {
        margin: 0 0 8px 0;
        color: var(--ink);
        font-size: 20px;
        font-weight: 600;
    }

    .cat-details {
        margin: 0 0 20px 0;
        color: var(--muted);
        font-size: 14px;
        line-height: 1.4;
    }

    /* Actions */
    .card-actions {
        margin-top: auto;
        display: flex;
        gap: 12px;
        justify-content: stretch;
    }

    .details-btn {
        flex: 1;
        background: transparent;
        color: var(--btn);
        border: 2px solid var(--btn);
        padding: 10px 16px;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.2s ease;
        text-align: center;
        font-size: 14px;
    }
        .details-btn:hover {
            background: var(--btn);
            color: #fff;
        }

    .adopt-btn {
        flex: 1;
        background: var(--ok);
        color: #fff;
        border: 2px solid var(--ok);
        padding: 10px 16px;
        border-radius: 10px;
        font-weight: 600;
        text-decoration: none;
        cursor: pointer;
        transition: all 0.2s ease;
        text-align: center;
        font-size: 14px;
    }
        .adopt-btn:hover {
            background: var(--okH);
            border-color: var(--okH);
        }

    /* Responsive design */
    @@media (max-width: 768px) {
        .navbar {
            padding: 14px 20px;
        }

        .adoption-container {
            padding: 24px 16px;
        }

        .header-section {
            flex-direction: column;
            gap: 16px;
            align-items: stretch;
            text-align: center;
        }

        .section-title {
            font-size: 28px;
        }

        .filters-container {
            flex-direction: column;
            gap: 16px;
            align-items: stretch;
        }

        .filter-group {
            justify-content: center;
            gap: 16px;
        }

        .filter-item {
            min-width: 140px;
        }

        .cat-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 20px;
        }

        .card-actions {
            flex-direction: column;
        }
    }

    @@media (max-width: 480px) {
        .filter-group {
            flex-direction: column;
            gap: 12px;
        }

        .filter-item {
            min-width: 100%;
        }

        .cat-grid {
            grid-template-columns: 1fr;
        }
    }
</style>
