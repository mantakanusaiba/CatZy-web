@model List<Catzy.Models.CartItem>

@{
    ViewData["Title"] = "Checkout";
    var subtotal = Model.Sum(i => i.UnitPrice * i.Quantity);  // flattened fields
    var shipping = 60;
    var total = subtotal + shipping;
}


<div style="display:none">
    @Html.AntiForgeryToken()
</div>

<div class="checkout-container">
    <div class="checkout-header">
        <h2>Checkout</h2>
        <div class="checkout-steps">
            <div class="step active">
                <span class="step-number">1</span>
                <span class="step-text">Cart</span>
            </div>
            <div class="step active">
                <span class="step-number">2</span>
                <span class="step-text">Details</span>
            </div>
            <div class="step">
                <span class="step-number">3</span>
                <span class="step-text">Payment</span>
            </div>
            <div class="step">
                <span class="step-number">4</span>
                <span class="step-text">Complete</span>
            </div>
        </div>
    </div>

    <div class="checkout-content">
        <div class="order-summary">
            <h3>Order Summary</h3>
            <div class="checkout-items">
                <table class="checkout-table">
                    <thead>
                        <tr>
                            <th>Item</th>
                            <th>Price</th>
                            <th>Qty</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>@item.Name</td>
                                <td>Tk @item.UnitPrice</td>
                                <td>@item.Quantity</td>
                                <td>Tk @(item.UnitPrice * item.Quantity)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="summary-box">
                <div class="summary-row">
                    <span>Subtotal:</span>
                    <span class="amount">Tk @subtotal</span>
                </div>
                <div class="summary-row">
                    <span>Shipping:</span>
                    <span class="amount">Tk @shipping</span>
                </div>
                <div class="summary-row discount">
                    <span>Discount:</span>
                    <span class="amount">Tk 0</span>
                </div>
                <div class="summary-row total">
                    <span>Total:</span>
                    <span class="amount">Tk @total</span>
                </div>
            </div>
        </div>

        <div class="customer-details">
            <h3>Customer Information</h3>
            <form class="checkout-form">
                <div class="form-group">
                    <label for="fullName">Full Name</label>
                    <input type="text" id="fullName" name="fullName" required autocomplete="name">
                </div>
                <div class="form-group">
                    <label for="email">Email</label>
                    <input type="email" id="email" name="email" required autocomplete="email">
                </div>
                <div class="form-group">
                    <label for="phone">Phone</label>
                    <input type="tel" id="phone" name="phone" required autocomplete="tel">
                </div>
                <div class="form-group">
                    <label for="address">Address</label>
                    <input type="text" id="address" name="address" required autocomplete="street-address">
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="city">City</label>
                        <input type="text" id="city" name="city" required autocomplete="address-level2">
                    </div>
                    <div class="form-group">
                        <label for="postalCode">Postal Code</label>
                        <input type="text" id="postalCode" name="postalCode" required autocomplete="postal-code">
                    </div>
                </div>
                <div class="form-group">
                    <label for="paymentMethod">Payment Method</label>
                    <select id="paymentMethod" name="paymentMethod" required>
                        <option value="">Select Payment Method</option>
                        <option value="cod">Cash on Delivery</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="notes">Order Notes (Optional)</label>
                    <textarea id="notes" name="notes" rows="3"></textarea>
                </div>
            </form>
        </div>
    </div>

    <div class="checkout-actions">
        <a href="@Url.Action("Cart","Shop")" class="back-btn">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#6b4b2e">
                <path d="M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z" />
            </svg>
            Back to Cart
        </a>
        <button class="btn confirm-btn">
            Confirm Order
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#6b4b2e">
                <path d="M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z" />
            </svg>
        </button>
    </div>
</div>

<style>
    body {
        background-color: #ffffff;
        font-family: 'Comic Sans MS', cursive, sans-serif;
        margin: 0;
        padding: 0;
        min-height: 100vh;
    }

    .checkout-container {
        border: 2px solid #e5c185;
        padding: 40px 20px;
        max-width: 1200px;
        margin: 40px auto;
        background: #ffffff;
        border-radius: 20px;
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        overflow: hidden;
    }
   
    .checkout-header {
        padding: 0 30px 30px;
        border-bottom: 2px solid #e5c185;
    }

        .checkout-header h2 {
            color: #6b4b2e;
            font-size: 32px;
            font-weight: 700;
            text-align: center;
            margin-bottom: 30px;
        }

    .checkout-steps {
        display: flex;
        justify-content: space-between;
        max-width: 600px;
        margin: 0 auto;
    }

    .step {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        flex: 1;
    }

        .step:not(:last-child):after {
            content: "";
            position: absolute;
            top: 15px;
            left: 50%;
            width: 100%;
            height: 2px;
            background: #e5c185;
            z-index: 0;
        }

        .step:last-child:after {
            display: none;
        }

        .step.active:not(:last-child):after {
            background: #e5c185;
        }

        .step:not(.active):after {
            background: #f0e6d2;
        }

    .step-number {
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background: #f0e6d2;
        color: #8a5e3c;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        margin-bottom: 8px;
        position: relative;
        z-index: 1;
    }

    .step.active .step-number {
        background: #e5c185;
        color: #6b4b2e;
    }

    .step-text {
        font-size: 14px;
        color: #8a5e3c;
    }

    .step.active .step-text {
        color: #6b4b2e;
        font-weight: 600;
    }

    
    .checkout-content {
        display: flex;
        flex-wrap: wrap;
        padding: 30px;
        gap: 30px;
    }

    .order-summary, .customer-details {
        flex: 1;
        min-width: 300px;
    }

        .order-summary h3, .customer-details h3 {
            color: #6b4b2e;
            font-size: 22px;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 1px solid #f0e6d2;
        }

  
    .checkout-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .checkout-table th, .checkout-table td {
            padding: 12px 10px;
            text-align: left;
            color: #6b4b2e;
        }

        .checkout-table th {
            border-bottom: 2px solid #e5c185;
            font-weight: 600;
        }

        .checkout-table td {
            border-bottom: 1px solid #f0e6d2;
        }

        .checkout-table tr:last-child td {
            border-bottom: none;
        }

    .summary-box {
        background: #fff9eb;
        border-radius: 15px;
        border: 2px solid #e5c185;
        padding: 20px;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 12px;
        color: #6b4b2e;
    }

    .discount {
        color: #4caf50;
    }

    .summary-row.total {
        font-weight: 700;
        font-size: 18px;
        margin-top: 15px;
        padding-top: 15px;
        border-top: 1px dashed #e5c185;
    }

    .amount {
        font-weight: 600;
    }


    .checkout-form {
        background: #fff9eb;
        border-radius: 15px;
        border: 2px solid #e5c185;
        padding: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-row {
        display: flex;
        gap: 20px;
    }

        .form-row .form-group {
            flex: 1;
        }

    label {
        display: block;
        margin-bottom: 8px;
        color: #6b4b2e;
        font-weight: 500;
    }

    input[type="text"], input[type="email"], input[type="tel"], select, textarea {
        width: 100%;
        padding: 12px 15px;
        border: 1px solid #e5c185;
        border-radius: 10px;
        font-size: 16px;
        color: #6b4b2e;
        background: #ffffff;
        transition: all 0.3s ease;
    }

        input:focus, select:focus, textarea:focus {
            outline: none;
            border-color: #d4aa6a;
            box-shadow: 0 0 0 3px rgba(229,193,133,0.2);
        }

    /* Checkout actions */
    .checkout-actions {
        display: flex;
        justify-content: space-between;
        padding: 0 30px 30px;
    }

    .btn {
        background-color: #e5c185;
        border: none;
        padding: 14px 30px;
        border-radius: 30px;
        color: #6b4b2e;
        font-weight: bold;
        cursor: pointer;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 10px;
        font-size: 16px;
        box-shadow: 0 4px 8px rgba(229,193,133,0.3);
    }

        .btn:hover {
            background-color: #d4aa6a;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(229,193,133,0.4);
        }

    .back-btn {
        text-decoration: none;
        background-color: transparent;
        border: 1px solid #e5c185;
        padding: 14px 25px;
        border-radius: 30px;
        color: #6b4b2e;
        font-weight: bold;
        transition: all 0.3s ease;
        display: inline-flex;
        align-items: center;
        gap: 10px;
    }

        .back-btn:hover {
            background-color: #fff1c1;
            transform: translateY(-2px);
        }

        .back-btn svg {
            width: 18px;
            height: 18px;
        }

    .confirm-btn svg {
        width: 18px;
        height: 18px;
    }


 
</style>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const confirmBtn = document.querySelector('.confirm-btn');
        const form = document.querySelector('.checkout-form');
        const token = document.querySelector("input[name='__RequestVerificationToken']")?.value || "";

        if (!confirmBtn || !form) return;

        confirmBtn.addEventListener('click', function () {

            const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');
            let ok = true;

            requiredFields.forEach(field => {

                const hasValueProp = ('value' in field);
                const val = hasValueProp ? String(field.value || '').trim() : '';
                if (!val) {
                    field.style.borderColor = '#f44336';
                    ok = false;
                } else {
                    field.style.borderColor = '#e5c185';
                }
            });

            if (!ok) {
                alert('Please fill in all required fields.');
                return;
            }

            const fd = new FormData(form);
            fd.append('__RequestVerificationToken', token);

            fetch('/Shop/ProcessOrder', { method: 'POST', body: fd })
                .then(r => { if (r.redirected) location.href = r.url; else alert('Error processing your order.'); })
                .catch(() => alert('Error processing your order.'));
        });
    });

</script>
